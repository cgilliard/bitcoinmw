#!/bin/sh

export CC="${CC:-clang}"
export OUTPUT="${OUTPUT:-../mrustc/output}"
export MRUSTC="${MRUSTC:-mrustc}"

CCFLAGS=-O3

if [ "clean" = "$1" ]; then
	echo "Cleaning"
        cd secp256k1-zkp
        make mostlyclean-compile
        cd ..
        rm -rf .obj/* libtest.a bin/* 
elif [ "mrustc" = "$1" ]; then
	echo "Building BitcoinMW with mrustc"
        ./scripts/secp256k1zkp.sh || exit 1;
        cd c
        for file in *.c
        do
                if [ ! -e ../.obj/${file%.c}.o ] || [ ${file} -nt ../.obj/${file%.c}.o ]; then
                        echo "${CC} ${CCFLAGS} -o ../.obj/${file%.c}.o -c -Ic ${file}";
                        ${CC} ${CCFLAGS} -o ../.obj/${file%.c}.o -c -Ic ${file} || exit 1;
                fi
        done
        cd ..
	${MRUSTC} -C panic=abort \
		-O \
		--crate-type=lib \
		-L${OUTPUT} \
		--cfg mrustc \
		-o .obj/rust \
		rust/mod.rs || exit 1;
	${CC} ${CCFLAGS} -o bin/bmw .obj/*.o -L.obj -lgmp -lsecp256k1 || exit 1;
else
	echo "Building BitcoinMW with rustc"
	./scripts/secp256k1zkp.sh || exit 1;
	cd c
        for file in *.c
        do
                if [ ! -e ../.obj/${file%.c}.o ] || [ ${file} -nt ../.obj/${file%.c}.o ]; then
                        echo "${CC} ${CCFLAGS} -o ../.obj/${file%.c}.o -c -Ic ${file}";
                        ${CC} ${CCFLAGS} -o ../.obj/${file%.c}.o -c -Ic ${file} || exit 1;
                fi
        done
	cd ..
	rustc -C panic=abort \
		-C opt-level=3 \
		--emit=obj \
		--crate-type=lib \
		-o .obj/rust.o \
		rust/mod.rs || exit 1;
	${CC} ${CCFLAGS} -o bin/bmw .obj/*.o -L.obj -lgmp -lsecp256k1 || exit 1;
fi
